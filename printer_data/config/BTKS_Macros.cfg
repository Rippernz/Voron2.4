# Macro prompts that interact with AFC-Klipper_Add_On

[gcode_macro BT_LOAD_LANE]
gcode:
    {% set lanes = printer.AFC.lanes %}

    RESPOND TYPE=command MSG="action:prompt_begin Load Lane"
    RESPOND TYPE=command MSG="action:prompt_text Select a lane to load to toolhead, printer must be homed"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    {% for lane in lanes %}
        {% set loop_index = loop.index0 %} # loop.index0 gives the 0-based index
        {% set button_style = "primary" if loop_index % 2 == 0 else "secondary" %}
            RESPOND TYPE=command MSG="action:prompt_button { lane } |CHANGE_TOOL LANE={ lane } |{ button_style }"
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Back|RESPOND TYPE=command MSG="action:prompt_end"|error"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro BT_EJECT_LANE]
gcode:
    {% set lanes = printer.AFC.lanes %}

    RESPOND TYPE=command MSG="action:prompt_begin Eject Lane"
    RESPOND TYPE=command MSG="action:prompt_text Select a lane to eject"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    {% for lane in lanes %}
        {% set loop_index = loop.index0 %} # loop.index0 gives the 0-based index
        {% set button_style = "primary" if loop_index % 2 == 0 else "secondary" %}
            RESPOND TYPE=command MSG="action:prompt_button { lane } |LANE_UNLOAD LANE={ lane } |{ button_style }"
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Back|RESPOND TYPE=command MSG="action:prompt_end"|error"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro BT_SELECT_LANE_MOVE]
gcode:
    {% set lanes = printer.AFC.lanes %}

    RESPOND TYPE=command MSG="action:prompt_begin Lane Move Select"
    RESPOND TYPE=command MSG="action:prompt_text Select a lane to move"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    {% for lane in lanes %}
        {% set loop_index = loop.index0 %} # loop.index0 gives the 0-based index
        {% set button_style = "primary" if loop_index % 2 == 0 else "secondary" %}
            RESPOND TYPE=command MSG="action:prompt_button { lane } |BT_MOVING_LANE LANE={ lane } |{ button_style }"
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_button_group_end"

    RESPOND TYPE=command MSG="action:prompt_footer_button Back|RESPOND TYPE=command MSG="action:prompt_end"|error"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro BT_MOVING_LANE]
gcode:
    {% set lane = params.LANE %}
    {% set distances = [10, 20, 50, 100] %}
    
    RESPOND TYPE=command MSG="action:prompt_begin select distance to move"
    RESPOND TYPE=command MSG="action:prompt_text Select a distance to move for { lane }"
    { action_respond_info(lane) }

    {% for dist in distances %}
        RESPOND TYPE=command MSG="action:prompt_button_group_start"
        
        # Positive move button
        {% set button_style_pos = "primary" if loop.index0 % 2 == 0 else "secondary" %}
        RESPOND TYPE=command MSG="action:prompt_button -{ dist } |LANE_MOVE LANE={ lane } DISTANCE={ -dist } |{ button_style_pos }"
        
        # Negative move button
        {% set button_style_neg = "primary" if loop.index0 % 2 != 0 else "secondary" %}
        RESPOND TYPE=command MSG="action:prompt_button { dist } |LANE_MOVE LANE={ lane } DISTANCE={ dist } |{ button_style_neg }"

        RESPOND TYPE=command MSG="action:prompt_button_group_end"
    {% endfor %}
    
    RESPOND TYPE=command MSG="action:prompt_footer_button Back|BT_SELECT_LANE_MOVE |warning"
    RESPOND TYPE=command MSG="action:prompt_footer_button Exit|RESPOND TYPE=command MSG=\"action:prompt_end\"|error"
    RESPOND TYPE=command MSG="action:prompt_show"

[gcode_macro BT_TEST_LANE]
gcode:
    {% set lanes = printer.AFC.lanes %}

    RESPOND TYPE=command MSG="action:prompt_begin Lane Test"
    RESPOND TYPE=command MSG="action:prompt_text Select a lane to test respoolers"
    RESPOND TYPE=command MSG="action:prompt_button_group_start"
    {% for lane in lanes %}
        {% set loop_index = loop.index0 %} # loop.index0 gives the 0-based index
        {% set button_style = "primary" if loop_index % 2 == 0 else "secondary" %}
            RESPOND TYPE=command MSG="action:prompt_button { lane } |TEST LANE={ lane } |{ button_style }"
    {% endfor %}
    RESPOND TYPE=command MSG="action:prompt_button_group_end"
    RESPOND TYPE=command MSG="action:prompt_footer_button Back|RESPOND TYPE=command MSG="action:prompt_end"|error"
    RESPOND TYPE=command MSG="action:prompt_show"
